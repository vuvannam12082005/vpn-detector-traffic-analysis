import gradio as gr
import pandas as pd
import joblib
import os

# Load m√¥ h√¨nh
MODEL_PATH = os.path.join("models", "xgb_model.pkl")  # ƒê·ªïi t·ª´ rf_model.pkl th√†nh xgb_model.pkl
try:
    model = joblib.load(MODEL_PATH)
    print(f"ƒê√£ t·∫£i m√¥ h√¨nh t·ª´ {MODEL_PATH}")
except FileNotFoundError as e:
    print(f"L·ªói: {e}. Vui l√≤ng ch·∫°y train_xgb_and_save.py ƒë·ªÉ t·∫°o m√¥ h√¨nh.")
    exit(1)

# H√†m d·ª± ƒëo√°n
def predict(file):
    if file is None:
        return "No file", None
    df = pd.read_csv(file.name)
    if "label" in df.columns:
        df = df.drop(columns=["label"])
    preds = model.predict(df)
    df["prediction"] = preds
    summary = {
        "Total": len(preds),
        "VPN (1)": int((preds == 1).sum()),
        "Non-VPN (0)": int((preds == 0).sum()),
    }
    return summary, df

# T·∫°o giao di·ªán Gradio
with gr.Blocks(title="VPN Detector") as demo:
    gr.Markdown("# üõ°Ô∏è VPN Detector\nUpload CSV flows -> model predicts VPN or not.")
    inp = gr.File(label="Upload CSV")
    out_summary = gr.JSON(label="Summary")
    out_table = gr.Dataframe(label="Detail")
    btn = gr.Button("Predict")
    btn.click(predict, inp, [out_summary, out_table])

# Kh·ªüi ƒë·ªông server v·ªõi th√¥ng b√°o t√πy ch·ªânh
if __name__ == "__main__":
    print("\n‚ö†Ô∏è Truy c·∫≠p t·ª´ m√°y b·∫°n t·∫°i: http://127.0.0.1:7860", flush=True)
    demo.launch(server_name="0.0.0.0", server_port=7860, show_error=True)